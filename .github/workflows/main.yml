on:
  push:
    branches:
    - main
env:
  buildConfiguration: Release
  dotnetSdkVersion: 6.0.x
  projectRoot: ./src/Optsol.EventDriven.Components.Core.Domain/Optsol.EventDriven.Components.Core.Domain.csproj
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Usando .NET SDK ${{ env.dotnetSdkVersion }}
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: ${{ env.dotnetSdkVersion }}
    # - name: Setup NuGet
    #  uses: NuGet/setup-nuget@v1.0.5
    - name: Restaurando Dependências
      run: dotnet restore ${{ env.projectRoot }}
    - name: Rodando o Build 
      run: dotnet build ${{ env.projectRoot }} -c ${{ env.buildConfiguration }} --no-restore
    - name: Rodando Testes Automatizados
      run: dotnet test ./playground/EventDriven.Arch.Driven.Infra.Data.Unit.Test/EventDriven.Arch.Driven.Infra.Data.Unit.Test.csproj -c ${{ env.buildConfiguration }} --no-restore --no-build --collect "Code coverage"
    #- name: Publish
    #  if: startsWith(github.ref, 'refs/heads/release')
    #  run: nuget push **\*.nupkg -Source 'https://api.nuget.org/v3/index.json' -ApiKey 'secrets.oy2nihe3zvfrjsafortq3j333m24owde3al6skdkl7or2i'
    - name: Geração do package
      run: dotnet pack ${{ env.projectRoot }} -c Release -o out
    - name: Push no NuGet
      run: |
        cd out
        dotnet nuget push *.nupkg --source https://api.nuget.org/v3/index.json --api-key oy2b5r4t6hc7udvdpcpq5ql3y2ndhj3edcjfo5jm4dhsci --skip-duplicate
    - name: Publicando Artefato
      uses: actions/upload-artifact@v2
      with:
        path: ${{ github.workspace }}
        name: drop
